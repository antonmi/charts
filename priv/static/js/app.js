// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.APIClient = (function() {

    function APIClient(url) {
      this.url = url;
      console.log(this.url);
      $.getJSON(this.url, {
        "format": "json"
      }, this.draw_chart);
    }

    APIClient.prototype.get_data = function(callback) {
      return $.getJSON(this.url, {
        "format": "json"
      }, callback);
    };

    return APIClient;

  })();

  window.BaseChart = (function() {

    function BaseChart(chart_div_id) {
      var url;
      this.chart_div_id = chart_div_id;
      this.draw_chart = __bind(this.draw_chart, this);

      this.$chart_div = $("#" + this.chart_div_id);
      url = this.$chart_div.attr('data-url');
      this.token = this.$chart_div.attr('data-token');
      this.api_client = new window.APIClient(url);
      this.ws_client = new window.WSClient(this);
      this.init();
      this.update();
    }

    BaseChart.prototype.init = function() {};

    BaseChart.prototype.draw = function() {};

    BaseChart.prototype.update = function() {
      return this.api_client.get_data(this.draw_chart);
    };

    BaseChart.prototype.draw_chart = function(data) {
      data = JSON.parse(data['data']);
      return this.draw(data);
    };

    return BaseChart;

  })();

  window.LineChart = (function(_super) {

    __extends(LineChart, _super);

    function LineChart() {
      return LineChart.__super__.constructor.apply(this, arguments);
    }

    LineChart.prototype.init = function() {
      return this.chart = new google.visualization.LineChart(document.getElementById(this.chart_div_id));
    };

    LineChart.prototype.draw = function(data) {
      var options;
      data = google.visualization.arrayToDataTable(data);
      options = {
        title: 'Company Performance',
        curveType: 'function',
        legend: {
          position: 'bottom'
        }
      };
      return this.chart.draw(data, options);
    };

    return LineChart;

  })(window.BaseChart);

  window.WSClient = (function() {

    function WSClient(chart) {
      var url;
      this.chart = chart;
      url = "wss://" + location.host + "/ws";
      this.socket = new Phoenix.Socket(url);
      this.init();
    }

    WSClient.prototype.init = function() {
      var _this = this;
      return this.socket.join("data:" + this.chart.token, {}, function(channel) {
        window.chan = channel;
        channel.on("join", function(message) {
          console.log("joined");
          return console.log(message);
        });
        return channel.on("update", function(message) {
          console.log("update");
          _this.chart.update();
          return console.log(message);
        });
      });
    };

    return WSClient;

  })();

}).call(this);
